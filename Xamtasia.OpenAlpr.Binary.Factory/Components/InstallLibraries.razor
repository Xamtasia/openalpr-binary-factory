@using System.Diagnostics;

<style>
    div.scroll {
        margin: 4px, 4px;
        padding: 4px;
        background-color: black;
        color:white;
        width: 100%;
        height: 800px;
        overflow-x: hidden;
        overflow-y: auto;
    }
</style>
<div>
    <button @onclick="InstallLibrariesIntoDirectory">Install Library Sources</button>
</div>
<div>@Error</div>
<div class="scroll">
    <pre style="color:white;">
    @Message
    </pre>
</div>


@code {

    string Message { get; set; }
    string Error { get; set; }

    private void InstallLibrariesIntoDirectory()
    {
        Message = @"Install Button Clicked\n\n";
        try
        {
            var process = new Process()
            {
                StartInfo = new ProcessStartInfo
                {
                    FileName = "/bin/bash",
                    Arguments = $"-c \"/scripts/downloadandunpacklibraries\"",
                    RedirectStandardOutput = true,
                    RedirectStandardError = true,
                    UseShellExecute = false,
                    CreateNoWindow = true,
                }
            };

            process.OutputDataReceived += new DataReceivedEventHandler((s, e) =>
            {
                Message += $"{e.Data}\n\n";
            });
            process.ErrorDataReceived += new DataReceivedEventHandler((s, e) =>
            {
                Error = e.Data;
            });

            process.Start();
            process.BeginOutputReadLine();
            process.BeginErrorReadLine();

            //process.Start();
            //string result = process.StandardOutput.ReadToEnd();
            //Message += $"StdOut: {result}";
            //process.WaitForExit();
        }
        catch (Exception ex)
        {
            Message += $"Error: {ex.Message} ";
        }
    }

    protected override Task OnInitializedAsync()
    {
        Message = string.Empty;
        Error = string.Empty;

        return base.OnInitializedAsync();
    }

}
